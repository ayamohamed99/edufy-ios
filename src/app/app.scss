// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}:    -moz-calc(#{$expression});
  #{$property}:         calc(#{$expression});
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
@mixin box-shadow($value) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  -ms-box-shadow: $value;
  box-shadow: $value;
}
@mixin appearance($value) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  -ms-appearance: $value;
  appearance: $value;
}
@mixin transform($value) {
  -webkit-transform: $value;
  -moz-transform: $value;
  -ms-transform: $value;
  transform: $value;
}
@mixin transition($value) {
  -webkit-transition: $value;
  -moz-transition: $value;
  -ms-transition: $value;
  transition: $value;
}

/* Flex */
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flex;
  display: -webkit-flex;
  display: flex;
}
//@mixin inline-flex {
//  display: -webkit-inline-box;
//  display: -webkit-inline-flex;
//  display: -moz-inline-flex;
//  display: -ms-inline-flexbox;
//  display: inline-flex;
//}
@mixin flex-wrap($value) {
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  -ms-flex-wrap: $value;
  flex-wrap: $value;
}

@mixin align-items($value) {
  -webkit-align-items: $value;
  -moz-align-items: $value;
  -ms-align-items: $value;
  align-items: $value;
}
@mixin align-self($value) {
  -webkit-align-self: $value;
  -moz-align-self: $value;
  -ms-align-self: $value;
  align-self: $value;
}
@mixin justify-content($value) {
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  -ms-justify-content: $value;
  justify-content: $value;
}

/* font Color */
@mixin font-color-set-yellow {
  * { color: $yellow; }
  a {
    &:hover { color: $yellow; }
  }
}

@mixin font-color-set-brown {
  *:not(.btn):not(input):not(textarea):not(select):not(.form-control) { color: $brown; }
  a:not(.btn) {
    &:hover { color: $brown; }
  }
}

.navMenuClass{
  margin-top: 16+8px;
  padding-left: 16px;
  padding-right: 16px;
  .item.item-block .item-inner {
    padding-right: 0px;
    border-bottom: 0px;
  }

  .item {
    height: 59px;
    border-radius: 15px;
    //margin-bottom: 8px;
  }
  ion-icon{
    color: #5C87F7;
  }
  .input-wrapper {
    padding-left: 16px;
    padding-right: 16px;
    .label {
      margin: 19px 8px 13px 0;
    }
  }

  .toolsItem{
    color: #8C92A0;
    ion-icon{
      color: #8C92A0;
    }
  }

  .selected, .item:hover{
    height: 59px;
    border-radius: 10px;
    margin-bottom: 8px;
    background-color: #5C87F7;
    color: #fff9fb;
    animation: shadow-drop-2-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
    ion-icon{
      color: white;
    }
  }

  @keyframes shadow-drop-2-center {
    0% {
      -webkit-transform: translateZ(0);
      transform: translateZ(0);
      box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
    }
    100% {
      -webkit-transform: translateZ(50px);
      transform: translateZ(50px);
      box-shadow: 0 0 20px 0px rgba(92, 135, 247, 0.35);
    }
  }
}




